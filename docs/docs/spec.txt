
serialized data:

{ timestamp:... , text:..., sender:... }

sender can only be two values:
0. User 
1. STP Engine

note this information is available when user runs: 
curl api.51bank.io/instructions 




objectType
==========

Every object will have a property called "objectType" (in other systems that might be called "type" or "kind", "object").
Stripe API calls it: "object". 

So we will have "objectType" : 
"customer", "account", "payment", "collection" (for array/set)
Note: the value is all lower case and singular.


type
====

The unmodifiable type (not to get confused with objectType) property describes the object from a business angle. 
Its values are enumerable per objectType. 

customer.type --> "person", "business"  (griffin.sh uses "individual" , "corporation")
account.type  --> "personal"            (there might be more accounts' types in future)
payment.type  --> "bookTransfer"        (internal book transfer that only happens on 51bank. )


status
======

Every object will have a property called "status" to indicate where in its-life-cycle the object is
The value of status is singular and lower case.
Those are the possible values

 
customer.status --> "created", "active", "inactive"
account.status  --> "created", "active", "blocked", "closed" 
payment.status  --> "created", "completed", "cancelled", ... many others.  

To do:
 we might have a straight-thru processing engine to move the status of some items.
 for example: a customer might go from "created" to "active" after a few seconds. The STE basically simulates any KYC verification process.
 a payment might go to 'created' to 'completed' again in a few seconds. 
 but it might also be "rejected" if the account has not enough money. 

 We need to distinguish between calls to the restEngine from the user vs the straight-thru-processor 


createdAt and updatedAt   
=======================
Every object will have two properties (ISO 8601 timestamp) to indicate the time the object was created and 
updatedAt. (Copied from github rest api) 

...
  "public": true,
  "created_at": "2022-06-25T10:35:16Z",
  "updated_at": "2022-06-25T10:35:16Z",
...

Note: the first time you create an object its "updated_at" is set to the same value of "created_at" 


=============

url 
===

Indeed the unique reference locator for the given resource e.g.
https://api.51bank.io/accounts/ac_fphl

(the url is used by the STP engine to produce its curl message)







Questions: shall I flatten out person in account ?

=====
TO DO
=====

The configuration object should have: 
- baseCurrency (defaults to GBP) 
- straightThroughProcessingSpeedInMS (the speed we move a payment from "created" to "completed")
- ... 
- ...



======================
======================
SOME EXAMPLES TO REFER TO

COLUMN: 
======

curl https://api.column.com/transfers/ach \
  -XPOST \
  -u :<YOUR API KEY> \
  -d counterparty_id=<cpty_id> \
  -d bank_account_id=<bacc_id> \
  -d type=CREDIT \
  -d amount=40000 \
  -d currency_code=USD \
  -d description="payment"

STRIPE:
=======

{
  "id": "cus_9utnxg47pWjV1e",
  "object": "customer",
  "address": null,
  "balance": 10,
  "created": 1484209932,
  "currency": "usd",
  "default_source": "card_1LDXuH2eZvKYlo2CnGTzCC8s",
  "delinquent": false,
  "description": null,
  "discount": null,



GITHUB GIST REST API 
====================
    ... 
   "public": true,
    "created_at": "2010-04-14T02:15:15Z",
    "updated_at": "2011-06-20T11:34:15Z",
    "description": "Hello World Examples",
    "comments": 0,
    "user": null,
    "comments_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/comments/",
    "owner": {
